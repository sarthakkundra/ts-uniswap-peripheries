// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class LendGivenPrincipal extends ethereum.Event {
  get params(): LendGivenPrincipal__Params {
    return new LendGivenPrincipal__Params(this);
  }
}

export class LendGivenPrincipal__Params {
  _event: LendGivenPrincipal;

  constructor(event: LendGivenPrincipal) {
    this._event = event;
  }

  get token0(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get token1(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get strike(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get maturity(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get uniswapV3Fee(): i32 {
    return this._event.parameters[4].value.toI32();
  }

  get from(): Address {
    return this._event.parameters[5].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[6].value.toAddress();
  }

  get isToken0(): boolean {
    return this._event.parameters[7].value.toBoolean();
  }

  get tokenAmount(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }

  get positionAmount(): BigInt {
    return this._event.parameters[9].value.toBigInt();
  }
}

export class TimeswapV2PeripheryUniswapV3LendGivenPrincipal__timeswapV2OptionMintCallbackInputParamStruct extends ethereum.Tuple {
  get strike(): BigInt {
    return this[0].toBigInt();
  }

  get maturity(): BigInt {
    return this[1].toBigInt();
  }

  get token0AndLong0Amount(): BigInt {
    return this[2].toBigInt();
  }

  get token1AndLong1Amount(): BigInt {
    return this[3].toBigInt();
  }

  get shortAmount(): BigInt {
    return this[4].toBigInt();
  }

  get data(): Bytes {
    return this[5].toBytes();
  }
}

export class TimeswapV2PeripheryUniswapV3LendGivenPrincipal__timeswapV2PoolDeleverageCallbackInputParamStruct extends ethereum.Tuple {
  get strike(): BigInt {
    return this[0].toBigInt();
  }

  get maturity(): BigInt {
    return this[1].toBigInt();
  }

  get long0Amount(): BigInt {
    return this[2].toBigInt();
  }

  get long1Amount(): BigInt {
    return this[3].toBigInt();
  }

  get shortAmount(): BigInt {
    return this[4].toBigInt();
  }

  get data(): Bytes {
    return this[5].toBytes();
  }
}

export class TimeswapV2PeripheryUniswapV3LendGivenPrincipal__timeswapV2PoolDeleverageChoiceCallbackResult {
  value0: BigInt;
  value1: BigInt;
  value2: Bytes;

  constructor(value0: BigInt, value1: BigInt, value2: Bytes) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromBytes(this.value2));
    return map;
  }

  getLong0Amount(): BigInt {
    return this.value0;
  }

  getLong1Amount(): BigInt {
    return this.value1;
  }

  getData(): Bytes {
    return this.value2;
  }
}

export class TimeswapV2PeripheryUniswapV3LendGivenPrincipal__timeswapV2PoolDeleverageChoiceCallbackInputParamStruct extends ethereum.Tuple {
  get strike(): BigInt {
    return this[0].toBigInt();
  }

  get maturity(): BigInt {
    return this[1].toBigInt();
  }

  get longAmount(): BigInt {
    return this[2].toBigInt();
  }

  get shortAmount(): BigInt {
    return this[3].toBigInt();
  }

  get data(): Bytes {
    return this[4].toBytes();
  }
}

export class TimeswapV2PeripheryUniswapV3LendGivenPrincipal__timeswapV2TokenMintCallbackInputParamStruct extends ethereum.Tuple {
  get token0(): Address {
    return this[0].toAddress();
  }

  get token1(): Address {
    return this[1].toAddress();
  }

  get strike(): BigInt {
    return this[2].toBigInt();
  }

  get maturity(): BigInt {
    return this[3].toBigInt();
  }

  get long0Amount(): BigInt {
    return this[4].toBigInt();
  }

  get long1Amount(): BigInt {
    return this[5].toBigInt();
  }

  get shortAmount(): BigInt {
    return this[6].toBigInt();
  }

  get data(): Bytes {
    return this[7].toBytes();
  }
}

export class TimeswapV2PeripheryUniswapV3LendGivenPrincipal extends ethereum.SmartContract {
  static bind(
    address: Address
  ): TimeswapV2PeripheryUniswapV3LendGivenPrincipal {
    return new TimeswapV2PeripheryUniswapV3LendGivenPrincipal(
      "TimeswapV2PeripheryUniswapV3LendGivenPrincipal",
      address
    );
  }

  optionFactory(): Address {
    let result = super.call("optionFactory", "optionFactory():(address)", []);

    return result[0].toAddress();
  }

  try_optionFactory(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "optionFactory",
      "optionFactory():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  poolFactory(): Address {
    let result = super.call("poolFactory", "poolFactory():(address)", []);

    return result[0].toAddress();
  }

  try_poolFactory(): ethereum.CallResult<Address> {
    let result = super.tryCall("poolFactory", "poolFactory():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  timeswapV2OptionMintCallback(
    param: TimeswapV2PeripheryUniswapV3LendGivenPrincipal__timeswapV2OptionMintCallbackInputParamStruct
  ): Bytes {
    let result = super.call(
      "timeswapV2OptionMintCallback",
      "timeswapV2OptionMintCallback((uint256,uint256,uint256,uint256,uint256,bytes)):(bytes)",
      [ethereum.Value.fromTuple(param)]
    );

    return result[0].toBytes();
  }

  try_timeswapV2OptionMintCallback(
    param: TimeswapV2PeripheryUniswapV3LendGivenPrincipal__timeswapV2OptionMintCallbackInputParamStruct
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "timeswapV2OptionMintCallback",
      "timeswapV2OptionMintCallback((uint256,uint256,uint256,uint256,uint256,bytes)):(bytes)",
      [ethereum.Value.fromTuple(param)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  timeswapV2PoolDeleverageCallback(
    param: TimeswapV2PeripheryUniswapV3LendGivenPrincipal__timeswapV2PoolDeleverageCallbackInputParamStruct
  ): Bytes {
    let result = super.call(
      "timeswapV2PoolDeleverageCallback",
      "timeswapV2PoolDeleverageCallback((uint256,uint256,uint256,uint256,uint256,bytes)):(bytes)",
      [ethereum.Value.fromTuple(param)]
    );

    return result[0].toBytes();
  }

  try_timeswapV2PoolDeleverageCallback(
    param: TimeswapV2PeripheryUniswapV3LendGivenPrincipal__timeswapV2PoolDeleverageCallbackInputParamStruct
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "timeswapV2PoolDeleverageCallback",
      "timeswapV2PoolDeleverageCallback((uint256,uint256,uint256,uint256,uint256,bytes)):(bytes)",
      [ethereum.Value.fromTuple(param)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  timeswapV2PoolDeleverageChoiceCallback(
    param: TimeswapV2PeripheryUniswapV3LendGivenPrincipal__timeswapV2PoolDeleverageChoiceCallbackInputParamStruct
  ): TimeswapV2PeripheryUniswapV3LendGivenPrincipal__timeswapV2PoolDeleverageChoiceCallbackResult {
    let result = super.call(
      "timeswapV2PoolDeleverageChoiceCallback",
      "timeswapV2PoolDeleverageChoiceCallback((uint256,uint256,uint256,uint256,bytes)):(uint256,uint256,bytes)",
      [ethereum.Value.fromTuple(param)]
    );

    return new TimeswapV2PeripheryUniswapV3LendGivenPrincipal__timeswapV2PoolDeleverageChoiceCallbackResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBytes()
    );
  }

  try_timeswapV2PoolDeleverageChoiceCallback(
    param: TimeswapV2PeripheryUniswapV3LendGivenPrincipal__timeswapV2PoolDeleverageChoiceCallbackInputParamStruct
  ): ethereum.CallResult<
    TimeswapV2PeripheryUniswapV3LendGivenPrincipal__timeswapV2PoolDeleverageChoiceCallbackResult
  > {
    let result = super.tryCall(
      "timeswapV2PoolDeleverageChoiceCallback",
      "timeswapV2PoolDeleverageChoiceCallback((uint256,uint256,uint256,uint256,bytes)):(uint256,uint256,bytes)",
      [ethereum.Value.fromTuple(param)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new TimeswapV2PeripheryUniswapV3LendGivenPrincipal__timeswapV2PoolDeleverageChoiceCallbackResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBytes()
      )
    );
  }

  timeswapV2TokenMintCallback(
    param: TimeswapV2PeripheryUniswapV3LendGivenPrincipal__timeswapV2TokenMintCallbackInputParamStruct
  ): Bytes {
    let result = super.call(
      "timeswapV2TokenMintCallback",
      "timeswapV2TokenMintCallback((address,address,uint256,uint256,uint256,uint256,uint256,bytes)):(bytes)",
      [ethereum.Value.fromTuple(param)]
    );

    return result[0].toBytes();
  }

  try_timeswapV2TokenMintCallback(
    param: TimeswapV2PeripheryUniswapV3LendGivenPrincipal__timeswapV2TokenMintCallbackInputParamStruct
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "timeswapV2TokenMintCallback",
      "timeswapV2TokenMintCallback((address,address,uint256,uint256,uint256,uint256,uint256,bytes)):(bytes)",
      [ethereum.Value.fromTuple(param)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  tokens(): Address {
    let result = super.call("tokens", "tokens():(address)", []);

    return result[0].toAddress();
  }

  try_tokens(): ethereum.CallResult<Address> {
    let result = super.tryCall("tokens", "tokens():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  uniswapV3Factory(): Address {
    let result = super.call(
      "uniswapV3Factory",
      "uniswapV3Factory():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_uniswapV3Factory(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "uniswapV3Factory",
      "uniswapV3Factory():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  wrappedNativeToken(): Address {
    let result = super.call(
      "wrappedNativeToken",
      "wrappedNativeToken():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_wrappedNativeToken(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "wrappedNativeToken",
      "wrappedNativeToken():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get chosenOptionFactory(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get chosenPoolFactory(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get chosenTokens(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get chosenUniswapV3Factory(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get chosenNative(): Address {
    return this._call.inputValues[4].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class LendGivenPrincipalCall extends ethereum.Call {
  get inputs(): LendGivenPrincipalCall__Inputs {
    return new LendGivenPrincipalCall__Inputs(this);
  }

  get outputs(): LendGivenPrincipalCall__Outputs {
    return new LendGivenPrincipalCall__Outputs(this);
  }
}

export class LendGivenPrincipalCall__Inputs {
  _call: LendGivenPrincipalCall;

  constructor(call: LendGivenPrincipalCall) {
    this._call = call;
  }

  get param(): LendGivenPrincipalCallParamStruct {
    return changetype<LendGivenPrincipalCallParamStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class LendGivenPrincipalCall__Outputs {
  _call: LendGivenPrincipalCall;

  constructor(call: LendGivenPrincipalCall) {
    this._call = call;
  }

  get positionAmount(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class LendGivenPrincipalCallParamStruct extends ethereum.Tuple {
  get token0(): Address {
    return this[0].toAddress();
  }

  get token1(): Address {
    return this[1].toAddress();
  }

  get strike(): BigInt {
    return this[2].toBigInt();
  }

  get maturity(): BigInt {
    return this[3].toBigInt();
  }

  get uniswapV3Fee(): i32 {
    return this[4].toI32();
  }

  get to(): Address {
    return this[5].toAddress();
  }

  get isToken0(): boolean {
    return this[6].toBoolean();
  }

  get tokenAmount(): BigInt {
    return this[7].toBigInt();
  }

  get minReturnAmount(): BigInt {
    return this[8].toBigInt();
  }

  get deadline(): BigInt {
    return this[9].toBigInt();
  }
}

export class MulticallCall extends ethereum.Call {
  get inputs(): MulticallCall__Inputs {
    return new MulticallCall__Inputs(this);
  }

  get outputs(): MulticallCall__Outputs {
    return new MulticallCall__Outputs(this);
  }
}

export class MulticallCall__Inputs {
  _call: MulticallCall;

  constructor(call: MulticallCall) {
    this._call = call;
  }

  get data(): Array<Bytes> {
    return this._call.inputValues[0].value.toBytesArray();
  }
}

export class MulticallCall__Outputs {
  _call: MulticallCall;

  constructor(call: MulticallCall) {
    this._call = call;
  }

  get results(): Array<Bytes> {
    return this._call.outputValues[0].value.toBytesArray();
  }
}

export class RefundNativesCall extends ethereum.Call {
  get inputs(): RefundNativesCall__Inputs {
    return new RefundNativesCall__Inputs(this);
  }

  get outputs(): RefundNativesCall__Outputs {
    return new RefundNativesCall__Outputs(this);
  }
}

export class RefundNativesCall__Inputs {
  _call: RefundNativesCall;

  constructor(call: RefundNativesCall) {
    this._call = call;
  }
}

export class RefundNativesCall__Outputs {
  _call: RefundNativesCall;

  constructor(call: RefundNativesCall) {
    this._call = call;
  }
}

export class TimeswapV2OptionMintCallbackCall extends ethereum.Call {
  get inputs(): TimeswapV2OptionMintCallbackCall__Inputs {
    return new TimeswapV2OptionMintCallbackCall__Inputs(this);
  }

  get outputs(): TimeswapV2OptionMintCallbackCall__Outputs {
    return new TimeswapV2OptionMintCallbackCall__Outputs(this);
  }
}

export class TimeswapV2OptionMintCallbackCall__Inputs {
  _call: TimeswapV2OptionMintCallbackCall;

  constructor(call: TimeswapV2OptionMintCallbackCall) {
    this._call = call;
  }

  get param(): TimeswapV2OptionMintCallbackCallParamStruct {
    return changetype<TimeswapV2OptionMintCallbackCallParamStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class TimeswapV2OptionMintCallbackCall__Outputs {
  _call: TimeswapV2OptionMintCallbackCall;

  constructor(call: TimeswapV2OptionMintCallbackCall) {
    this._call = call;
  }

  get data(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class TimeswapV2OptionMintCallbackCallParamStruct extends ethereum.Tuple {
  get strike(): BigInt {
    return this[0].toBigInt();
  }

  get maturity(): BigInt {
    return this[1].toBigInt();
  }

  get token0AndLong0Amount(): BigInt {
    return this[2].toBigInt();
  }

  get token1AndLong1Amount(): BigInt {
    return this[3].toBigInt();
  }

  get shortAmount(): BigInt {
    return this[4].toBigInt();
  }

  get data(): Bytes {
    return this[5].toBytes();
  }
}

export class TimeswapV2PoolDeleverageCallbackCall extends ethereum.Call {
  get inputs(): TimeswapV2PoolDeleverageCallbackCall__Inputs {
    return new TimeswapV2PoolDeleverageCallbackCall__Inputs(this);
  }

  get outputs(): TimeswapV2PoolDeleverageCallbackCall__Outputs {
    return new TimeswapV2PoolDeleverageCallbackCall__Outputs(this);
  }
}

export class TimeswapV2PoolDeleverageCallbackCall__Inputs {
  _call: TimeswapV2PoolDeleverageCallbackCall;

  constructor(call: TimeswapV2PoolDeleverageCallbackCall) {
    this._call = call;
  }

  get param(): TimeswapV2PoolDeleverageCallbackCallParamStruct {
    return changetype<TimeswapV2PoolDeleverageCallbackCallParamStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class TimeswapV2PoolDeleverageCallbackCall__Outputs {
  _call: TimeswapV2PoolDeleverageCallbackCall;

  constructor(call: TimeswapV2PoolDeleverageCallbackCall) {
    this._call = call;
  }

  get data(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class TimeswapV2PoolDeleverageCallbackCallParamStruct extends ethereum.Tuple {
  get strike(): BigInt {
    return this[0].toBigInt();
  }

  get maturity(): BigInt {
    return this[1].toBigInt();
  }

  get long0Amount(): BigInt {
    return this[2].toBigInt();
  }

  get long1Amount(): BigInt {
    return this[3].toBigInt();
  }

  get shortAmount(): BigInt {
    return this[4].toBigInt();
  }

  get data(): Bytes {
    return this[5].toBytes();
  }
}

export class TimeswapV2TokenMintCallbackCall extends ethereum.Call {
  get inputs(): TimeswapV2TokenMintCallbackCall__Inputs {
    return new TimeswapV2TokenMintCallbackCall__Inputs(this);
  }

  get outputs(): TimeswapV2TokenMintCallbackCall__Outputs {
    return new TimeswapV2TokenMintCallbackCall__Outputs(this);
  }
}

export class TimeswapV2TokenMintCallbackCall__Inputs {
  _call: TimeswapV2TokenMintCallbackCall;

  constructor(call: TimeswapV2TokenMintCallbackCall) {
    this._call = call;
  }

  get param(): TimeswapV2TokenMintCallbackCallParamStruct {
    return changetype<TimeswapV2TokenMintCallbackCallParamStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class TimeswapV2TokenMintCallbackCall__Outputs {
  _call: TimeswapV2TokenMintCallbackCall;

  constructor(call: TimeswapV2TokenMintCallbackCall) {
    this._call = call;
  }

  get data(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class TimeswapV2TokenMintCallbackCallParamStruct extends ethereum.Tuple {
  get token0(): Address {
    return this[0].toAddress();
  }

  get token1(): Address {
    return this[1].toAddress();
  }

  get strike(): BigInt {
    return this[2].toBigInt();
  }

  get maturity(): BigInt {
    return this[3].toBigInt();
  }

  get long0Amount(): BigInt {
    return this[4].toBigInt();
  }

  get long1Amount(): BigInt {
    return this[5].toBigInt();
  }

  get shortAmount(): BigInt {
    return this[6].toBigInt();
  }

  get data(): Bytes {
    return this[7].toBytes();
  }
}

export class UniswapV3SwapCallbackCall extends ethereum.Call {
  get inputs(): UniswapV3SwapCallbackCall__Inputs {
    return new UniswapV3SwapCallbackCall__Inputs(this);
  }

  get outputs(): UniswapV3SwapCallbackCall__Outputs {
    return new UniswapV3SwapCallbackCall__Outputs(this);
  }
}

export class UniswapV3SwapCallbackCall__Inputs {
  _call: UniswapV3SwapCallbackCall;

  constructor(call: UniswapV3SwapCallbackCall) {
    this._call = call;
  }

  get amount0Delta(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get amount1Delta(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get data(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class UniswapV3SwapCallbackCall__Outputs {
  _call: UniswapV3SwapCallbackCall;

  constructor(call: UniswapV3SwapCallbackCall) {
    this._call = call;
  }
}
